# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                       controllers.Application.index

GET         /legals                 controllers.Application.legals

GET         /conf/new               controllers.ConferenceController.addConf
POST        /conf/new               controllers.ConferenceController.create
GET         /conf/allow             controllers.ConferenceController.allowList
GET         /conf/upcoming          controllers.ConferenceController.listUpcomingConfs(filter: Option[String])
GET         /conf/all               controllers.ConferenceController.listConfs(filter: Option[String])
GET         /conf/selectPrivacy/:confId     controllers.ConferenceController.privacySelection(confId: Long)
POST        /conf/:confId/addWithPrivacy    controllers.ConferenceController.createConfWithPrivacy(confId: Long, groupId: Option[Long])
GET         /conf/downloadCSV               controllers.ConferenceController.downloadCSV
GET         /conf/downloadCSVForLab/:id     controllers.ConferenceController.downloadCSVForLab(id : Long)
GET         /conf/:id               controllers.ConferenceController.viewConf(id: Long)
POST        /conf/:id/allow         controllers.ConferenceController.acceptAuth(id: Long)
GET         /conf/:id/allow         controllers.ConferenceController.accept(id: Long, token: Option[String])
POST        /conf/:id/refuse        controllers.ConferenceController.refuseAuth(id: Long)
GET         /conf/:id/refuse        controllers.ConferenceController.refuse(id: Long, token: Option[String])
GET         /conf/:id/modify        controllers.ConferenceController.modify(id: Long)
POST        /conf/:id/modify        controllers.ConferenceController.reCreate(id: Long)
POST        /conf/:id/delete        controllers.ConferenceController.delete(id: Long)

GET         /calendar               controllers.ConferenceController.calendar

GET         /user/new               controllers.UserController.newUser(type: Option[String])
POST        /user/new               controllers.UserController.create
GET         /user/all               controllers.UserController.list(filter: Option[String])
GET         /user/:id/modify        controllers.UserController.modify(id: Long)
POST        /user/:id/modify        controllers.UserController.reCreate(id: Long)
POST        /user/:id/delete        controllers.UserController.delete(id: Long)

GET         /lab/new                controllers.LabController.newLab
POST        /lab/new                controllers.LabController.create
GET         /lab/all                controllers.LabController.list(filter: Option[String])
GET         /lab/:id/modify         controllers.LabController.modify(id: Long)
POST        /lab/:id/modify         controllers.LabController.reCreate(id: Long)
POST        /lab/:id/delete         controllers.LabController.delete(id: Long)
GET         /lab/:id/logo           controllers.LabController.logo(id: Long)

GET         /labGroup/new           controllers.LabGroupController.newLabGroup
POST        /labGroup/new           controllers.LabGroupController.create
GET         /labGroup/all           controllers.LabGroupController.list(filter: Option[String])
GET         /labGroup/:id/addLab    controllers.LabGroupController.listLabToAdd(id: Long, filter: Option[String])
POST        /labGroup/addLab        controllers.LabGroupController.addLab(idLabGroup: Long, idLab: Long)
GET         /labGroup/:id/removeLab controllers.LabGroupController.listLabOfGroup(id: Long, filter: Option[String])
POST        /labGroup/removeLab     controllers.LabGroupController.removeLab(idLabGroup: Long, idLab: Long)
GET         /labGroup/:id/modify    controllers.LabGroupController.modify(id: Long)
POST        /labGroup/:id/modify    controllers.LabGroupController.reCreate(id: Long)
POST        /labGroup/:id/delete    controllers.LabGroupController.delete(id: Long)

GET         /rss                    controllers.RSSFeedController.index

GET         /login                  controllers.LoginController.login
POST        /login                  controllers.LoginController.authenticate
GET         /logout                 controllers.LoginController.logout

# API
GET         /api/v1/conf/all        controllers.ConferenceController.listConfEvents(start: String, end: String)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file           controllers.Assets.at(path="/public", file)
